/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_openquantumsafe_KeyEncapsulation */

#ifndef _KEYENCAPSULATION_H_INCLUDED_
#define _KEYENCAPSULATION_H_INCLUDED_
#ifdef __cplusplus
extern "C" {
#endif

/*
 * Class:     org_openquantumsafe_KeyEncapsulation
 * Method:    create_KEM_new
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_openquantumsafe_KeyEncapsulation_create_1KEM_1new
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openquantumsafe_KeyEncapsulation
 * Method:    free_KEM
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_openquantumsafe_KeyEncapsulation_free_1KEM
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_openquantumsafe_KeyEncapsulation
 * Method:    get_KEM_details
 * Signature: ()Lorg/openquantumsafe/KeyEncapsulation/KeyEncapsulationDetails;
 */
JNIEXPORT jobject JNICALL Java_org_openquantumsafe_KeyEncapsulation_get_1KEM_1details
  (JNIEnv *, jobject);

/*
 * Class:     org_openquantumsafe_KeyEncapsulation
 * Method:    generate_keypair
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_openquantumsafe_KeyEncapsulation_generate_1keypair
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_openquantumsafe_KeyEncapsulation
 * Method:    import_secret_key
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_org_openquantumsafe_KeyEncapsulation_import_1secret_1key
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     org_openquantumsafe_KeyEncapsulation
 * Method:    export_public_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_openquantumsafe_KeyEncapsulation_export_1public_1key
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_openquantumsafe_KeyEncapsulation
 * Method:    export_secret_key
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_openquantumsafe_KeyEncapsulation_export_1secret_1key
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_openquantumsafe_KeyEncapsulation
 * Method:    encap_secret
 * Signature: (Lorg/openquantumsafe/KeyEncapsulation/Pair;[BJJ)I
 */
JNIEXPORT jint JNICALL Java_org_openquantumsafe_KeyEncapsulation_encap_1secret
  (JNIEnv *, jobject, jobject, jbyteArray, jlong, jlong);

/*
 * Class:     org_openquantumsafe_KeyEncapsulation
 * Method:    decap_secret
 * Signature: ([B[B)I
 */
JNIEXPORT jint JNICALL Java_org_openquantumsafe_KeyEncapsulation_decap_1secret
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
